{"ast":null,"code":"var _jsxFileName = \"E:\\\\Magang USK\\\\Catatan\\\\penggunaan ocr untuk menganalisasi buku\\\\code\\\\OCR test 1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Tesseract from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [file, setFile] = useState();\n  const [progress, setProgress] = useState(0);\n  const [language, setLanguage] = useState(\"eng\");\n  const [result, setResult] = useState(\"\");\n\n  const onFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const processImage = () => {\n    setResult(\"\");\n    setProgress(0);\n    Tesseract.recognize(file, language, {\n      logger: m => {\n        if (m.status === \"recognizing text\") {\n          setProgress(m.progress);\n        }\n      }\n    }).then(_ref => {\n      let {\n        data: {\n          text\n        }\n      } = _ref;\n      setResult(text);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: language,\n      onChange: e => setLanguage(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"eng\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ara\",\n        children: \"Arabic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deu\",\n        children: \"German\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ind\",\n        children: \"Indonesia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 25\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        onClick: processImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontsize: 25,\n        color: \"teal\"\n      },\n      children: \"Result:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), result !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        fontSize: 20,\n        color: \"black\"\n      },\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WXI0Za6X7x97PzkfcdGWITogPEI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Magang USK/Catatan/penggunaan ocr untuk menganalisasi buku/code/OCR test 1/src/App.js"],"names":["useState","Tesseract","App","file","setFile","progress","setProgress","language","setLanguage","result","setResult","onFileChange","e","target","files","processImage","recognize","logger","m","status","then","data","text","value","marginTop","fontsize","color","fontSize"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Tesseract from \"tesseract.js\";\n\nfunction App() {\n  const [file, setFile] = useState();\n  const [progress, setProgress] = useState(0);\n  const [language, setLanguage] = useState(\"eng\");\n  const [result, setResult] = useState(\"\");\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const processImage = () => {\n    setResult(\"\");\n    setProgress(0);\n    Tesseract.recognize(file, language, {\n      logger: (m) => {\n        if (m.status === \"recognizing text\") {\n          setProgress(m.progress);\n        }\n      },\n    }).then(({ data: { text } }) => {\n      setResult(text);\n    });\n  };\n  return (\n    <div className=\"App\">\n      <input type=\"file\" onChange={onFileChange} />\n      <select value={language} onChange={(e) => setLanguage(e.target.value)}>\n        <option value=\"eng\">English</option>\n        <option value=\"ara\">Arabic</option>\n        <option value=\"deu\">German</option>\n        <option value=\"ind\">Indonesia</option>\n      </select>\n      <div style={{ marginTop: 25 }}>\n        <input type=\"button\" value=\"Submit\" onClick={processImage} />\n      </div>\n      <div>\n        <progress value={progress} max={1} />\n      </div>\n      <div style={{fontsize: 25, color:\"teal\"}}>Result:</div>\n      {result !== \"\" && (\n        <div style={{ marginTop: 20, fontSize: 20, color: \"black\" }}>\n          Result: {result}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}