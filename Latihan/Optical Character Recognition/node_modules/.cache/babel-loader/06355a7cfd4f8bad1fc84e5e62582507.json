{"ast":null,"code":"import _slicedToArray from\"A:\\\\WEBSITE\\\\ama_web\\\\main\\\\Latihan\\\\Optical Character Recognition\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import\"./App.css\";import{useState}from\"react\";import Tesseract from\"tesseract.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var _useState5=useState(\"eng\"),_useState6=_slicedToArray(_useState5,2),language=_useState6[0],setLanguage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),result=_useState8[0],setResult=_useState8[1];var onFileChange=function onFileChange(e){setFile(e.target.files[0]);};var processImage=function processImage(){setResult(\"\");setProgress(0);Tesseract.recognize(file,language,{logger:function logger(m){if(m.status===\"recognizing text\"){setProgress(m.progress);}}}).then(function(_ref){var text=_ref.data.text;setResult(text);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:onFileChange}),\" \",/*#__PURE__*/_jsxs(\"select\",{value:language,onChange:function onChange(e){return setLanguage(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"eng\",children:\" English \"}),\" \",/*#__PURE__*/_jsx(\"option\",{value:\"ara\",children:\" Arabic \"}),\" \",/*#__PURE__*/_jsx(\"option\",{value:\"deu\",children:\" German \"}),\" \",/*#__PURE__*/_jsx(\"option\",{value:\"ind\",children:\" Indonesia \"}),\" \"]}),\" \",/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:25},children:[/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Submit\",onClick:processImage}),\" \"]}),\" \",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"progress\",{value:progress,max:1}),\" \"]}),\" \",/*#__PURE__*/_jsx(\"div\",{style:{fontsize:25,color:\"teal\"},children:\" Result: \"}),\" \",result!==\"\"&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:20,fontSize:20,color:\"black\"},children:[\" \",result,\" \"]}),\" \"]});}export default App;","map":{"version":3,"sources":["A:/WEBSITE/ama_web/main/Latihan/Optical Character Recognition/src/App.js"],"names":["useState","Tesseract","App","file","setFile","progress","setProgress","language","setLanguage","result","setResult","onFileChange","e","target","files","processImage","recognize","logger","m","status","then","text","data","value","marginTop","fontsize","color","fontSize"],"mappings":"8JAAA,MAAO,WAAP,CACA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACX,cAAwBF,QAAQ,EAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAgCJ,QAAQ,CAAC,CAAD,CAAxC,yCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAAgCN,QAAQ,CAAC,KAAD,CAAxC,yCAAOO,QAAP,eAAiBC,WAAjB,eACA,eAA4BR,QAAQ,CAAC,EAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBL,SAAS,CAAC,EAAD,CAAT,CACAJ,WAAW,CAAC,CAAD,CAAX,CACAL,SAAS,CAACe,SAAV,CAAoBb,IAApB,CAA0BI,QAA1B,CAAoC,CAChCU,MAAM,CAAE,gBAACC,CAAD,CAAO,CACX,GAAIA,CAAC,CAACC,MAAF,GAAa,kBAAjB,CAAqC,CACjCb,WAAW,CAACY,CAAC,CAACb,QAAH,CAAX,CACH,CACJ,CAL+B,CAApC,EAMGe,IANH,CAMQ,cAAwB,IAAbC,CAAAA,IAAa,MAArBC,IAAqB,CAAbD,IAAa,CAC5BX,SAAS,CAACW,IAAD,CAAT,CACH,CARD,EASH,CAZD,CAaA,mBAAS,aACD,SAAS,CAAG,KADX,wBAEL,cACM,IAAI,CAAG,MADb,CAEA,QAAQ,CAAKV,YAFb,EAFK,kBAKF,gBACI,KAAK,CAAKJ,QADd,CAEH,QAAQ,CACJ,kBAACK,CAAD,QAAOJ,CAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASU,KAAV,CAAlB,EAHD,wBAIH,eACO,KAAK,CAAG,KADf,uBAJG,kBAKuC,eACnC,KAAK,CAAG,KAD2B,sBALvC,kBAMsC,eAClC,KAAK,CAAG,KAD0B,sBANtC,kBAOsC,eAClC,KAAK,CAAG,KAD0B,yBAPtC,OALE,kBAcI,aACL,KAAK,CACL,CAAEC,SAAS,CAAE,EAAb,CAFK,wBAGT,cACM,IAAI,CAAG,QADb,CAEA,KAAK,CAAG,QAFR,CAGA,OAAO,CAAKT,YAHZ,EAHS,OAdJ,kBAsBC,oCAEN,iBACS,KAAK,CAAKV,QADnB,CAEA,GAAG,CAAK,CAFR,EAFM,OAtBD,kBA4BC,YACF,KAAK,CACL,CAAEoB,QAAQ,CAAE,EAAZ,CAAgBC,KAAK,CAAE,MAAvB,CAFE,uBA5BD,KA+BDjB,MAAM,GAAK,EAAX,eAAmB,aACX,KAAK,CACL,CAAEe,SAAS,CAAE,EAAb,CAAiBG,QAAQ,CAAE,EAA3B,CAA+BD,KAAK,CAAE,OAAtC,CAFW,eAE2CjB,MAF3C,OA/BlB,OAAT,CAuCH,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Tesseract from \"tesseract.js\";\n\nfunction App() {\n    const [file, setFile] = useState();\n    const [progress, setProgress] = useState(0);\n    const [language, setLanguage] = useState(\"eng\");\n    const [result, setResult] = useState(\"\");\n\n    const onFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const processImage = () => {\n        setResult(\"\");\n        setProgress(0);\n        Tesseract.recognize(file, language, {\n            logger: (m) => {\n                if (m.status === \"recognizing text\") {\n                    setProgress(m.progress);\n                }\n            },\n        }).then(({ data: { text } }) => {\n            setResult(text);\n        });\n    };\n    return ( <\n        div className = \"App\" >\n        <\n        input type = \"file\"\n        onChange = { onFileChange }\n        /> <\n        select value = { language }\n        onChange = {\n            (e) => setLanguage(e.target.value) } >\n        <\n        option value = \"eng\" > English < /option> <\n        option value = \"ara\" > Arabic < /option> <\n        option value = \"deu\" > German < /option> <\n        option value = \"ind\" > Indonesia < /option> <\n        /select> <\n        div style = {\n            { marginTop: 25 } } >\n        <\n        input type = \"button\"\n        value = \"Submit\"\n        onClick = { processImage }\n        /> <\n        /div> <\n        div >\n        <\n        progress value = { progress }\n        max = { 1 }\n        /> <\n        /div> <\n        div style = {\n            { fontsize: 25, color: \"teal\" } } > Result: < /div> {\n            result !== \"\" && ( <\n                div style = {\n                    { marginTop: 20, fontSize: 20, color: \"black\" } } > { result } <\n                /div>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}